# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: "Build and Push Container Frontend and Backend Images"
    name: 'gcr.io/k8s-skaffold/skaffold'
    entrypoint: /bin/bash
    args:
    - "-xe"
    - "-c"
    - |
      skaffold build --file-output=./artifacts.json \
        --default-repo=$_IMAGE_REPO \
        --tag=${SHORT_SHA} \
        --profile=dockerfile \
        --push=true
  
  # - id: "Build and Push Container Image: Frontend"
  #   name: "gcr.io/cloud-builders/docker"
  #   entrypoint: "/bin/bash"
  #   dir: "frontend"
  #   args:
  #     - "-c"
  #     - |
  #       docker build -t $_FRONTEND_IMAGE .
  #       docker push $_FRONTEND_IMAGE

  # - id: "Build and Push Container Image: Backend"
  #   name: "gcr.io/cloud-builders/docker"
  #   entrypoint: "/bin/bash"
  #   dir: "backend"
  #   args:
  #     - "-c"
  #     - |
  #       docker build -t $_BACKEND_IMAGE .
  #       docker push $_BACKEND_IMAGE

  - id: "Deploy to Cloud Run"
    name: "gcr.io/cloud-builders/gcloud:latest"
    entrypoint: /bin/bash
    args:
      - "-c"
      - "-x"
      - |
        gcloud run deploy guestbook-backend-dev --image gcr.io/cloudrun/hello --region us-central1
        gcloud run deploy guestbook-backend-prod --image gcr.io/cloudrun/hello --region us-central1
        dev_url=$(gcloud run services describe guestbook-backend-dev --region us-central1 --format='value(status.url)')
        prod_url=$(gcloud run services describe guestbook-backend-prod --region us-central1 --format='value(status.url)')

        sed -i "s|BACKEND_DEV|$dev_url|" ./frontend/cloudrun-manifests/guestbook-frontend.dev.service.yaml
        sed -i "s|BACKEND_PROD|$prod_url|" ./frontend/cloudrun-manifests/guestbook-frontend.prod.service.yaml

        gcloud deploy releases create backend-release-${SHORT_SHA} \
          --region $_REGION \
          --delivery-pipeline=cloudrun-guestbook-backend-delivery \
          --skaffold-file=./backend/cloudrun.skaffold.yaml \
          --images=java-guestbook-backend=$_BACKEND_IMAGE

        gcloud deploy releases create frontend-release-${SHORT_SHA} \
          --region $_REGION \
          --delivery-pipeline=cloudrun-guestbook-frontend-delivery \
          --skaffold-file=./frontend/cloudrun.skaffold.yaml \
          --images=java-guestbook-frontend=$_FRONTEND_IMAGE


  # - id: "Deploy to Cloud Run"
  #   name: "gcr.io/cloud-builders/gcloud:latest"
  #   entrypoint: /bin/bash
  #   args:
  #     - "-c"
  #     - |
  #       gcloud run deploy backend \
  #         --image us-central1-docker.pkg.dev/${PROJECT_ID}/containers/backend:${SHORT_SHA} \
  #         --allow-unauthenticated \
  #         --region ${_REGION} 

  #       echo $(gcloud run services describe backend \
  #         --region ${_REGION} \
  #         --format='value(status.url)') > _service_url

  #       gcloud run deploy frontend \
  #         --image us-central1-docker.pkg.dev/${PROJECT_ID}/containers/frontend:${SHORT_SHA} \
  #         --allow-unauthenticated \
  #         --region ${_REGION} \
  #         --set-env-vars GUESTBOOK_API_ADDR=$(cat _service_url)

images:
  - $_FRONTEND_IMAGE
  - $_BACKEND_IMAGE

substitutions:
  _IMAGE_REPO: 'us-central1-docker.pkg.dev/${PROJECT_ID}/containers'
  _FRONTEND_IMAGE: 'us-central1-docker.pkg.dev/${PROJECT_ID}/containers/java-guestbook-frontend:${SHORT_SHA}'
  _BACKEND_IMAGE: 'us-central1-docker.pkg.dev/${PROJECT_ID}/containers/java-guestbook-backend:${SHORT_SHA}'
  _REGION: us-central1
options:
    dynamic_substitutions: true