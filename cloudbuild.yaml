# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  # - id: "Build Maven Artifact with Provenance"
  #   name: gcr.io/cloud-builders/mvn
  #   dir: appengine-simple-jetty-main
  #   args: ['deploy']

  # - id: "Cache Maven dependencies in a remote AR repo"
  #   name: gcr.io/cloud-builders/mvn
  #   args: ["compile"]

  - id: "Build and Push Container Frontend and Backend Images"
    name: 'gcr.io/k8s-skaffold/skaffold'
    entrypoint: /bin/bash
    args:
    - "-xe"
    - "-c"
    - |
      skaffold build --file-output=./artifacts.json \
        --default-repo=${_REGION}-docker.pkg.dev/${PROJECT_ID}/containers \
        --tag=${SHORT_SHA} \
        --profile=dockerfile \
        --push=true
  
  # - id: "Build and Push Container Image: Frontend"
  #   name: "gcr.io/cloud-builders/docker"
  #   entrypoint: "/bin/bash"
  #   dir: "frontend"
  #   args:
  #     - "-c"
  #     - |
  #       docker build -t $_FRONTEND_IMAGE .
  #       docker push $_FRONTEND_IMAGE

  # - id: "Build and Push Container Image: Backend"
  #   name: "gcr.io/cloud-builders/docker"
  #   entrypoint: "/bin/bash"
  #   dir: "backend"
  #   args:
  #     - "-c"
  #     - |
  #       docker build -t $_BACKEND_IMAGE .
  #       docker push $_BACKEND_IMAGE

  - id: "Create Cloud Deploy Release"
    name: "gcr.io/cloud-builders/gcloud:latest"
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        # TODO: check if pipeline exists or if release already exists
        gcloud deploy releases create release-${SHORT_SHA} \
          --region $_REGION \
          --delivery-pipeline=guestbook-app-delivery \
          --images=java-guestbook-frontend=$_FRONTEND_IMAGE,java-guestbook-backend=$_BACKEND_IMAGE
#           --description "$(git log -1  --pretty='%s')" \
#           --build-artifacts /workspace/artifacts.json \

images:
  - $_FRONTEND_IMAGE
  - $_BACKEND_IMAGE

substitutions:
  _FRONTEND_IMAGE: 'us-central1-docker.pkg.dev/${PROJECT_ID}/containers/java-guestbook-frontend:${SHORT_SHA}'
  _BACKEND_IMAGE: 'us-central1-docker.pkg.dev/${PROJECT_ID}/containers/java-guestbook-backend:${SHORT_SHA}'
  _REGION: us-central1
# artifacts:
#   maven_artifacts:
#     - repository: "https://us-central1-maven.pkg.dev/starter-akitsch/guestbook-remote-repo"
#       path: "/workspace/appengine-simple-jetty-main/target/simple-jetty-main-1.jar"
#       artifact_id: "simple-jetty-main"
#       group_id: "com.example.appengine.demo"
#       version: "1"

options:
    dynamic_substitutions: true
