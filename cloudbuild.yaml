# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file is used in the full demo for the deployment of the Frontend and
# Backend services to GKE via Cloud Deploy

steps:
  - id: "Add Project ID to files"
    name: "gcr.io/cloud-builders/gcloud:latest"
    entrypoint: /bin/bash
    args:
      - "-xe"
      - "-c"
      - |
        sed -i "s|\/PROJECT_ID\/|\/${PROJECT_ID}\/|g" pom.xml **/pom.xml

  - id: "Build Maven Artifact"
    name: "gcr.io/cloud-builders/mvn:latest"
    dir: "guestbook-pojo"
    entrypoint: /bin/bash
    args:
      - "-xe"
      - "-c"
      - |
        mvn deploy || echo "Artifact may already exist"

  - id: "Cache Maven Dependencies in an Artifact Registry Remote Repo"
    name: "gcr.io/cloud-builders/mvn:latest"
    args: ["compile"]

  - id: "Build and Push Container Image: Frontend"
    name: "gcr.io/cloud-builders/docker:latest"
    entrypoint: "/bin/bash"
    dir: frontend
    args:
      - "-c"
      - |
        docker build --network=cloudbuild -t $_FRONTEND_IMAGE:$SHORT_SHA . 
        docker push $_FRONTEND_IMAGE:$SHORT_SHA

  - id: "Build and Push Container Image: Backend"
    name: "gcr.io/cloud-builders/docker:latest"
    entrypoint: "/bin/bash"
    dir: backend
    args:
      - "-c"
      - |
        docker build -t $_BACKEND_IMAGE:$SHORT_SHA .
        docker push $_BACKEND_IMAGE:$SHORT_SHA

  - id: "Create Cloud Deploy Release"
    name: "gcr.io/cloud-builders/gcloud:latest"
    entrypoint: /bin/bash
    args:
      - "-xe"
      - "-c"
      - |
        # Retrieve image SHAs
        frontend_sha=$(gcloud artifacts docker images describe $_FRONTEND_IMAGE:$SHORT_SHA --format="value(image_summary.digest)")
        backend_sha=$(gcloud artifacts docker images describe $_BACKEND_IMAGE:$SHORT_SHA --format="value(image_summary.digest)")

        # Create Cloud Deploy release with new images
        gcloud deploy releases create release-${SHORT_SHA} \
          --region $_REGION \
          --delivery-pipeline=guestbook-app-delivery \
          --images=java-guestbook-frontend=${_FRONTEND_IMAGE}@$frontend_sha,java-guestbook-backend=${_BACKEND_IMAGE}@$backend_sha

images:
  - $_FRONTEND_IMAGE:$SHORT_SHA
  - $_BACKEND_IMAGE:$SHORT_SHA

substitutions:
  _FRONTEND_IMAGE: "us-central1-docker.pkg.dev/${PROJECT_ID}/containers/java-guestbook-frontend"
  _BACKEND_IMAGE: "us-central1-docker.pkg.dev/${PROJECT_ID}/containers/java-guestbook-backend"
  _REGION: us-central1

options:
  dynamic_substitutions: true
  requestedVerifyOption: VERIFIED
